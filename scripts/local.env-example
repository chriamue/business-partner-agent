# ------------------------------------------------------------
# Business Partner Agent
# ------------------------------------------------------------
COMPOSE_PROJECT_NAME="bpa"
COMPOSE_FILE=docker-compose.yml:docker-compose.bpa2.yml:docker-compose.override.yml:docker-compose.tails.yml

# specify which profiles to use. Options: bpa1,bpa_agent1,bpa1_full,bpa2,bpa_agent2,bpa2_full,tails
COMPOSE_PROFILES=bpa1_full,bpa2_full

# Specifies the label for this agent. This label is publicized (self-attested) to other agents as part of forming a connection
AGENT_NAME="Business Partner Agent 1"
AGENT2_NAME="Business Partner Agent 2"

# localhost, ip address, dns name
BPA_HOST=host.docker.internal
BPA2_HOST=host.docker.internal
BPA_PORT=8000
BPA2_PORT=8010

BPA_DEBUG_PORT=1044
BPA2_DEBUG_PORT=1045

# The scheme that is used to register the profile endpoint on the ledger
BPA_SCHEME=http
BPA_CONFIG_FILES=classpath:application.yml,classpath:schemas.yml

# Security
BPA_SECURITY_ENABLED=false
# Default username and password, set if running in production like environments
BPA_BOOTSTRAP_UN=admin
BPA_BOOTSTRAP_PW=changeme
BPA_WEBHOOK_KEY=changeme

# Run in did:web mode with read only ledger. If set to true ACAPY_READ_ONLY_MODE has to be set as well.
# Once the mode is set you can not change it again without removing the postgres volume
BPA_WEB_MODE=false

# The Ledger Explorer
BPA_LEDGER_BROWSER=http://host.docker.internal:9000

# Optional: If set bpa renders a link to an external imprint page
BPA_IMPRINT_URL=

# Optional: If set bpa renders a link to an external privacy policy page
BPA_PRIVACY_POLICY_URL=

# This will set the registry size when a credential definition is created with Support Revocation.
BPA_CREDDEF_REVOCATION_REGISTRY_SIZE=3000

# ------------------------------------------------------------
# ACA-PY
# ------------------------------------------------------------

# Run in read only mode, requires BPA_WEB_MODE to be true.
#ACAPY_READ_ONLY_MODE=--read-only-ledger

ACAPY_GENESIS_URL=http://host.docker.internal:9000/genesis

# To support revocation set the 2 URLs of an existing tails server
ACAPY_TAILS_BASE_URL="--tails-server-base-url http://host.docker.internal:6543"
ACAPY_TAILS_UPLOAD_URL="--tails-server-upload-url http://host.docker.internal:6543"

#
# Identity
#

# Enter wallet seed here:
ACAPY_SEED=YjieiZiyoHaMza3sxXmgBYjBQ7L1er62
ACAPY_SEED2=YjieiZiyoHaMza3sxXmgBYjBQ7L1er61
#
# Build
#

# Build ACA-Py instead of using a published image. Requires usage of docker-compose.custom-acapy.yml
# Example here is using the current master
ACAPY_BUILD_CONTEXT=https://github.com/hyperledger/aries-cloudagent-python.git
ACAPY_BUILD_DOCKERFILE_PATH=docker/Dockerfile.run

#
# Security
#

# Protect all admin endpoints with the provided API key
# Development setup (do not use in production!)
ACAPY_ADMIN_CONFIG=--admin-insecure-mode
# Production setup (change the key to a generated secret one)
#ACAPY_ADMIN_URL_API_KEY=change-me
#ACAPY_ADMIN_CONFIG=--admin-api-key ${ACAPY_ADMIN_URL_API_KEY}

#
# Connectivity
#

# Exposed service ports
ACAPY_HTTP_PORT=8030
ACAPY_ADMIN_PORT=8031
# Public endpoint URL that is registered on the ledger
ACAPY1_ENDPOINT=http://host.docker.internal:8030

ACAPY2_HTTP_PORT=8040
ACAPY2_ADMIN_PORT=8041
ACAPY2_ENDPOINT=http://host.docker.internal:8040

#
# Wallet Storage
#

ACAPY_WALLET_TYPE=postgres_storage
ACAPY_WALLET_DATABASE=wallet_db
ACAPY_WALLET_ENCRYPTION_KEY=key

# ------------------------------------------------------------
# Postgres Storage
# ------------------------------------------------------------

POSTGRESQL_HOST=bpa-wallet-db1
POSTGRESQL1_PORT=5432

POSTGRESQL2_HOST=bpa-wallet-db2
POSTGRESQL2_PORT=5452

POSTGRESQL_USER=walletuser
POSTGRESQL_PASSWORD=walletpassword


